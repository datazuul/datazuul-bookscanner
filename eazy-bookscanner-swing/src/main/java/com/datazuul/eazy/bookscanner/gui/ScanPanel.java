package com.datazuul.eazy.bookscanner.gui;

import chdk.ptp.java.ICamera;
import com.datazuul.eazy.bookscanner.workers.LiveCaptureWorker;
import java.awt.image.BufferedImage;

public class ScanPanel extends javax.swing.JPanel {

  /**
   * Creates new form ScanPanel
   */
  public ScanPanel() {
    initComponents();
  }

  /**
   * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    cameraPanel = new com.datazuul.eazy.bookscanner.gui.CameraPanel();
    imagePanel = new com.datazuul.eazy.bookscanner.gui.ImagePanel();

    setLayout(new javax.swing.BoxLayout(this, javax.swing.BoxLayout.Y_AXIS));
    add(cameraPanel);

    javax.swing.GroupLayout imagePanelLayout = new javax.swing.GroupLayout(imagePanel);
    imagePanel.setLayout(imagePanelLayout);
    imagePanelLayout.setHorizontalGroup(
      imagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGap(0, 493, Short.MAX_VALUE)
    );
    imagePanelLayout.setVerticalGroup(
      imagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGap(0, 442, Short.MAX_VALUE)
    );

    add(imagePanel);
  }// </editor-fold>//GEN-END:initComponents


  // Variables declaration - do not modify//GEN-BEGIN:variables
  protected com.datazuul.eazy.bookscanner.gui.CameraPanel cameraPanel;
  protected com.datazuul.eazy.bookscanner.gui.ImagePanel imagePanel;
  // End of variables declaration//GEN-END:variables

  private ICamera camera;
  private LiveCaptureWorker liveCaptureWorker;

  public ICamera getCamera() {
    return camera;
  }

  public void setCamera(ICamera camera) {
    this.camera = camera;
    cameraPanel.setCamera(camera);
  }

  void setImage(BufferedImage image) {
    imagePanel.setImage(image);
  }

  public void startLiveView() {
    // FIXME do nothing because we have camera access connections when switching between live and capture
//    if (liveCaptureWorker == null) {
//      liveCaptureWorker = new LiveCaptureWorker(camera, imagePanel);
//    }
//    liveCaptureWorker.execute();
  }

  public void stopLiveView() {
    // FIXME do nothing because we have camera access connections when switching between live and capture
//    if (liveCaptureWorker != null) {
//      liveCaptureWorker.cancel(true);
//      while (!liveCaptureWorker.isCancelled()) {
//        System.out.print(".");
//      }
//    }
  }
}
